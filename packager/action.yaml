name: Choria Packager Executor
description: Uses the Choria Packager to package Go code into artifacts
inputs:
  build_package:
    description: The package name to build as defined in buildspec.yaml
    required: true

  packager_tag:
    description: The packager tag to use when building
    required: true

  version:
    description: The version to compile, can be `nightly`, `tag` or a specific version
    required: true

  build:
    description: The build definition from buildspec.yaml to use
    default: foss
    required: false

  go_package:
    description: The go package to build, eg. github.com/choria-io/go-choria
    required: false

  source_directory:
    description: Where the Go code is to build
    default: src
    required: true

  artifacts_directory:
    description: The directory holding artifacts
    required: false
    default: artifacts

runs:
  using: composite
  steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        path: ${{ inputs.source_directory }}/github.com/${{ github.repository }}

    - shell: bash
      run: |
        mkdir -p "${{ inputs.artifacts_directory }}/${{ inputs.build_package }}"

        _version="${{ inputs.version }}"
        if [ $_version = "nightly" ]
        then
          _version="0.99.0.$(date +'%Y%m%d')"
        fi

        if [ $_version = "tag" ]
        then
          echo "Parsing tag from: ${{ github.ref_name }}"
          _tag="${{ github.ref_name }}"
          _version="${_tag}"

          if [[ $_version == v* ]]
          then
              _version="${_tag:1}"
          fi
        fi

        if [ -z $_version ]
        then
          _version="0.0.0-${GITHUB_SHA}"
        fi

        _pkg="${{ inputs.go_package }}"
        if [ -z $_pkg ]
        then
          _pkg="github.com/${GITHUB_REPOSITORY}"
        fi

        docker run \
          --rm \
          -v `pwd`/${{ inputs.source_directory }}/${_pkg}:/go/src/${_pkg} \
          -v `pwd`/${{ inputs.artifacts_directory }}:/artifacts \
          -e SOURCE_DIR=/go/src/${_pkg} \
          -e SHA1=${GITHUB_SHA} \
          -e BUILD=${{ inputs.build }} \
          -e VERSION="$_version" \
          -e ARTIFACTS="/artifacts/${{ inputs.build_package }}" \
          -e PACKAGE=${{ inputs.build_package }} \
          registry.choria.io/choria/packager:${{ inputs.packager_tag }}

        ls -lR "${{ inputs.artifacts_directory }}/${{ inputs.build_package }}"

    - name: Archive artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ inputs.build }}
        retention-days: 5
        path: |
          ${{ inputs.artifacts_directory }}
          !${{ inputs.artifacts_directory }}/**/*.src.rpm
